source('D:/KFS/R/frage1.R', echo=TRUE)
source('D:/KFS/R/frage1.R', echo=TRUE)
source('D:/KFS/R/frage1.R', echo=TRUE)
source('D:/KFS/R/frage1.R', echo=TRUE)
source('D:/KFS/R/frage1.R', echo=TRUE)
source('D:/KFS/R/frage1.R', echo=TRUE)
source('D:/KFS/R/frage1.R', echo=TRUE)
source('D:/KFS/R/frage1.R', echo=TRUE)
source('D:/KFS/R/frage1.R', echo=TRUE)
source('D:/KFS/R/frage2.R', echo=TRUE)
source('D:/KFS/R/frage2.R', echo=TRUE)
source('D:/KFS/R/frage1_alternativ.R', echo=TRUE)
source('D:/KFS/R/frage1_alternativ.R', echo=TRUE)
source('D:/KFS/R/frage2.R', echo=TRUE)
source('D:/KFS/R/frage2.R', echo=TRUE)
summary(as.factor(data$Frage))
summary(data$Frage)
source('D:/KFS/R/frage2.R', echo=TRUE)
View(frage2)
View(frage2)
source('D:/KFS/R/frage2.R', echo=TRUE)
source('D:/KFS/R/frage2.R', echo=TRUE)
source('D:/KFS/R/frage2.R', echo=TRUE)
source('D:/KFS/R/frage2.R', echo=TRUE)
source('D:/KFS/R/frage2.R', echo=TRUE)
source('D:/KFS/R/frage2.R', echo=TRUE)
source('D:/KFS/R/frage3.R', echo=TRUE)
source('D:/KFS/R/frage2.R', echo=TRUE)
View(data)
source('D:/KFS/R/frage2.R', echo=TRUE)
data_general <- read.csv('D:/KFS/R/corona_R1-R5_Betroffenheit.csv')
labels_runden <- c("Befragung 1 \n(Mär-Apr 20; \nn=760)","Befragung 2 \n(Apr-Jun 20; \nn=677)",
"Befragung 3 \n(Jul-Aug 20; \nn=440;","Befragung 4 \n(Nov-Dez 20; \nn=443)",
"Befragung 5 \n(Dez 20-Jan 21; \nn=354)")
labels_antwort_v_481 <- c('derzeit infiziert',
'symptomfrei oder\nmilde symptome',
'schwere Symptome,\n gut überstanden',
'Infektion mit Folgeschäden',
'verstorben',
'Weiß nicht')
data_general <- subset(data_general, (!(Runde == 1 | Runde == 2)))
data_general[is.na(data_general)] <- 0
data <- aggregate(cbind(data_general$v_767,
data_general$v_768,
data_general$v_769,
data_general$v_770,
data_general$v_771,
data_general$v_772),
by=list(Runde=data_general$Runde),
FUN=sum)
data <- melt(data,
id.vars='Runde',
variable.name = 'Frage',
value.name='Wert')
data <- group_by(data, Runde) %>% mutate(percent = Wert/(sum(Wert)))
data <- aggregate(cbind(data_general$v_767,
data_general$v_768,
data_general$v_769,
data_general$v_770,
data_general$v_771,
data_general$v_772),
by=list(Runde=data_general$Runde),
FUN=sum)
data <- melt(data,
id.vars='Runde',
variable.name = 'Frage',
value.name='Wert')
source('D:/KFS/R/frage3.R', echo=TRUE)
source('D:/KFS/R/frage2.R', echo=TRUE)
# Summen der Antworten berechnen
data <- aggregate(cbind(data_general$v_481,
data_general$v_482,
data_general$v_483,
data_general$v_484,
data_general$v_485,
data_general$v_486),
by=list(Runde=data_general$Runde),
FUN=sum)
source('D:/KFS/R/frage3.R', echo=TRUE)
source('D:/KFS/R/Meine_Ergebnisse.R', echo=TRUE)
install.packages("gridExtra")
install.packages("ggpubr")
head(data)
source('D:/KFS/R/Meine_Ergebnisse.R', echo=TRUE)
source('D:/KFS/R/Meine_Ergebnisse.R', echo=TRUE)
source('D:/KFS/R/Meine_Ergebnisse.R', echo=TRUE)
source('D:/KFS/R/Meine_Ergebnisse.R', echo=TRUE)
source('D:/KFS/R/Meine_Ergebnisse.R', echo=TRUE)
source('D:/KFS/R/zeitlicher_verlauf_3kanäle.R', echo=TRUE)
View(ereignis)
source('D:/KFS/R/zeitlicher_verlauf_3kanäle.R', echo=TRUE)
source('D:/KFS/R/zeitlicher_verlauf_3kanäle.R', echo=TRUE)
source('D:/KFS/R/zeitlicher_verlauf_3kanäle.R', echo=TRUE)
source('D:/KFS/R/zeitlicher_verlauf_3kanäle.R', echo=TRUE)
source('D:/KFS/R/zeitlicher_verlauf_3kanäle.R', echo=TRUE)
source('D:/KFS/R/zeitlicher_verlauf_3kanäle.R', echo=TRUE)
source('D:/KFS/R/zeitlicher_verlauf_3kanäle.R', echo=TRUE)
source('D:/KFS/R/zeitlicher_verlauf_3kanäle.R', echo=TRUE)
source('D:/KFS/R/zeitlicher_verlauf_3kanäle.R', echo=TRUE)
source('D:/KFS/R/zeitlicher_verlauf_3kanäle.R', echo=TRUE)
source('D:/KFS/R/zeitlicher_verlauf_3kanäle.R', echo=TRUE)
ereignis <- subset(data, Ereignis==ereignis_name)
ereignis_plot <- ggplot(ereignis, aes(x=Timestamp, y=stat(count),
group=factor(ScreenName),
fill=factor(ScreenName)))+
geom_bar(position=position_dodge(width = 0.5))+
theme(legend.position = 'bottom')+
labs(title='Anzahl Tweets', x='Tag', y='Anzahl', fill=' ')
source('D:/KFS/R/zeitlicher_verlauf_3kanäle.R', echo=TRUE)
source('D:/KFS/R/zeitlicher_verlauf_3kanäle.R', echo=TRUE)
source('D:/KFS/R/zeitlicher_verlauf_3kanäle.R', echo=TRUE)
source('D:/KFS/R/zeitlicher_verlauf_3kanäle.R', echo=TRUE)
source('D:/KFS/R/zeitlicher_verlauf_3kanäle.R', echo=TRUE)
source('D:/KFS/R/zeitlicher_verlauf_3kanäle.R', echo=TRUE)
source('D:/KFS/R/zeitlicher_verlauf_3kanäle.R', echo=TRUE)
source('D:/KFS/R/zeitlicher_verlauf_3kanäle.R', echo=TRUE)
source('D:/KFS/R/zeitlicher_verlauf_3kanäle.R', echo=TRUE)
source('D:/KFS/R/zeitlicher_verlauf_3kanäle.R', echo=TRUE)
source('D:/KFS/R/zeitlicher_verlauf_3kanäle.R', echo=TRUE)
source('D:/KFS/R/zeitlicher_verlauf_3kanäle.R', echo=TRUE)
source('D:/KFS/R/zeitlicher_verlauf_3kanäle.R', echo=TRUE)
source('D:/KFS/R/zeitlicher_verlauf_3kanäle.R', echo=TRUE)
source('D:/KFS/R/zeitlicher_verlauf_3kanäle.R', echo=TRUE)
source('D:/KFS/R/zeitlicher_verlauf_3kanäle.R', echo=TRUE)
source('D:/KFS/R/zeitlicher_verlauf_3kanäle.R', echo=TRUE)
source('D:/KFS/R/zeitlicher_verlauf_3kanäle.R', echo=TRUE)
source('D:/KFS/R/zeitlicher_verlauf_3kanäle.R', echo=TRUE)
source('D:/KFS/R/zeitlicher_verlauf_3kanäle.R', echo=TRUE)
source('D:/KFS/R/zeitlicher_verlauf_3kanäle.R', echo=TRUE)
source('D:/KFS/R/zeitlicher_verlauf_3kanäle.R', echo=TRUE)
source('D:/KFS/R/zeitlicher_verlauf_3kanäle.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("httr")
source('~/.active-rstudio-document', echo=TRUE)
View(response)
View(fas_body)
source('~/.active-rstudio-document', echo=TRUE)
View(fas_body)
fas_body[["errors"]][["message"]]
fas_body[["errors"]][["message"]]
source('~/.active-rstudio-document', echo=TRUE)
fas_body[["errors"]][["message"]]
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('D:/KFS/R/Meine_Ergebnisse.R', echo=TRUE)
source('D:/KFS/R/zeitlicher_verlauf_3kanäle.R', echo=TRUE)
source('D:/KFS/R/API/all_tweets_sabine.R', echo=TRUE)
View(data)
source('D:/KFS/R/API/all_tweets_sabine.R', echo=TRUE)
source('D:/KFS/R/API/all_tweets_sabine.R', echo=TRUE)
source('D:/KFS/R/API/all_tweets_sabine.R', echo=TRUE)
source('D:/KFS/R/API/all_tweets_sabine.R', echo=TRUE)
source('D:/KFS/R/API/all_tweets_sabine.R', echo=TRUE)
source('D:/KFS/R/API/all_tweets_sabine.R', echo=TRUE)
source('D:/KFS/R/API/all_tweets_sabine.R', echo=TRUE)
source('D:/KFS/R/API/all_tweets_sabine.R', echo=TRUE)
source('D:/KFS/R/API/all_tweets_sabine.R', echo=TRUE)
source('D:/KFS/R/API/all_tweets_sabine.R', echo=TRUE)
source('D:/KFS/R/API/all_tweets_sabine.R', echo=TRUE)
source('D:/KFS/R/API/all_tweets_sabine.R', echo=TRUE)
source('D:/KFS/R/API/all_tweets_sabine.R', echo=TRUE)
source('D:/KFS/R/API/all_tweets_sabine.R', echo=TRUE)
source('D:/KFS/R/API/all_tweets_sabine.R', echo=TRUE)
source('D:/KFS/R/API/all_tweets_sabine.R', echo=TRUE)
source('D:/KFS/R/API/all_tweets_sabine.R', echo=TRUE)
source('D:/KFS/R/API/all_tweets_sabine.R', echo=TRUE)
source('D:/KFS/R/API/all_tweets_sabine.R', echo=TRUE)
source('D:/KFS/R/API/all_tweets_sabine.R', echo=TRUE)
source('D:/KFS/R/API/all_tweets_sabine.R', echo=TRUE)
source('D:/KFS/R/Meine_Ergebnisse.R', echo=TRUE)
source('D:/KFS/R/Meine_Ergebnisse.R', echo=TRUE)
source('D:/KFS/R/API/all_tweets_interactions.R', echo=TRUE)
source('D:/KFS/R/API/all_tweets_interactions.R', echo=TRUE)
source('D:/KFS/R/API/all_tweets_sabine.R', echo=TRUE)
source('D:/KFS/R/API/all_tweets_sabine.R', echo=TRUE)
source('D:/KFS/R/API/all_tweets_interactions.R', echo=TRUE)
source('D:/KFS/Regression/Corona_Runde_5_Regression_Simon.R', echo=TRUE)
source('D:/KFS/Regression/Corona_Runde_5_Regression_Simon.R', echo=TRUE)
source('D:/KFS/Regression/Corona_Runde_5_Regression_Simon.R', echo=TRUE)
source('D:/KFS/Regression/Corona_Runde_5_Regression_Simon.R', echo=TRUE)
View(corona)
source('D:/KFS/Regression/Corona_Runde_5_Regression_Simon.R', echo=TRUE)
corona$v_679@label
corona$v_679
source('D:/KFS/Regression/Corona_Runde_5_Regression_Simon.R', echo=TRUE)
source('D:/KFS/Regression/Corona_Runde_5_Regression_Simon.R', echo=TRUE)
source('D:/KFS/Regression/Corona_Runde_5_Regression_Simon.R', echo=TRUE)
View(table)
View(corona)
View(corona)
source('D:/KFS/Regression/Corona_Runde_5_Regression_Simon.R', echo=TRUE)
source('D:/KFS/Regression/Corona_Runde_5_Regression_Simon.R', echo=TRUE)
source('D:/KFS/Regression/Corona_Runde_5_Regression_Simon.R', echo=TRUE)
source('D:/KFS/Regression/Corona_Runde_5_Regression_Simon.R', echo=TRUE)
source('D:/KFS/Regression/Corona_Runde_5_Regression_Simon.R', echo=TRUE)
source('D:/KFS/Regression/Corona_Runde_5_Regression_Simon.R', echo=TRUE)
source('D:/KFS/Regression/Corona_Runde_5_Regression_Simon.R', echo=TRUE)
source('D:/KFS/Regression/Corona_Runde_5_Regression_Simon.R', echo=TRUE)
source('D:/KFS/Regression/Corona_Runde_5_Regression_Simon.R', echo=TRUE)
source('D:/KFS/Regression/Corona_Runde_5_Regression_Simon.R', echo=TRUE)
source('D:/KFS/Regression/Corona_Runde_5_Regression_Simon.R', echo=TRUE)
source('D:/KFS/Regression/Corona_Runde_5_Regression_Simon.R', echo=TRUE)
source('D:/KFS/Regression/Corona_Runde_5_Regression_Simon.R', echo=TRUE)
source('D:/KFS/Regression/Corona_Runde_5_Regression_Simon.R', echo=TRUE)
source('D:/KFS/Regression/Corona_Runde_5_Regression_Simon.R', echo=TRUE)
e
e
source('~/.active-rstudio-document', echo=TRUE)
install.packages("elevatr")
source('~/.active-rstudio-document', echo=TRUE)
require(ggplot2)
source('~/.active-rstudio-document', echo=TRUE)
library("knitr", lib.loc="~/R/win-library/4.0")
library("sf", lib.loc="~/R/win-library/4.0")
library("tmap", lib.loc="~/R/win-library/4.0")
stations
source('D:/GeoJob/geoepi/2_Modelling/Models/R/Workshop_applied_in_RJ/test.R', echo=TRUE)
install.packages(pkgs)
install.packages(pkgs)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
plot(r)
r
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
plotRGB(rgb)
crs(rgb)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
plot(examples)
View(examples)
plot(examples[geometry])
examples["geometry"]
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
plotRGB(rgb)
rgb <- crop(rgb, examples)
ex <- examples[1]
ex
View(ex)
ex <- examples[,1]
ex <- examples[1,]
View(ex)
plotRGB(rgb)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
l <-list
l
l <-list()
l
length(examples)
View(r1)
View(r1)
examples[1,]
examples
examples[1,]
examples[1,]['geometry']
crop(rgb, ex['geometry'])
test y- crop(rgb, ex['geometry'])
test <- crop(rgb, ex['geometry'])
plotRGB(test)
plotRGB(test)
clips <- list(NULL, NULL, NULL, NULL)
clips[1]
clips[1] <- NULL
clips[1]
clips[1] <- rgb
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
geom <- geom['geometry']
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
examples[1,]
examples[1,]['geometry']
test <- examples[1,]['geometry']
a <- crop(rgb, test)
plotRGB(a)
apply(examples)
apply(examples, 1, print)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
apply(examples, 2, print)
apply(examples, 1, print)
apply(examples['geometry'], 1, print)
apply(examples['geometry'][0], 1, print)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
a <- geom
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
print(geom)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
a <- apply(examples, 2, make_clip)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
rgb
crop(rgb, ex)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
a
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
a
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
plotRGB(ex4)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
plotRGB(ex4, margins=FALSE)
plotRGB(ex4, margins=FALSE)
plotRGB(ex4, margins=FALSE)
plotRGB(ex4, margins=FALSE)
plotRGB(ex4, margins=par(0,0,0,0))
plotRGB(ex4, margins=par(plt=c(0,0,0,0))
)
plotRGB(ex4, margins=par(plt=c(0,1,0,1))
)
plotRGB(ex4, margins=graphics::par(plt=c(0,1,0,1)))
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
plotRGB(ex1)
plotRGB(ex4, margins=FALSE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
View(ex1)
View(examples)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
examples[examples$random_cho == 'both']
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
plotRGB(ex1, margins=FALSE, axes=TRUE, margins=FALSE)
plotRGB(ex1, margins=FALSE, axes=TRUE)
plotRGB(ex1)
plotRGB(ex1)
plotRGB(ex1, stretch="his")
plotRGB(ex1, stretch="hist")
plotRGB(ex1)
plotRGB(ex1, stretch="hist")
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
rasterImage(rgb)
ex1
as.raster(ex1)
plotRGB(ex1, margins=c(0,0,0,0))
plotRGB(ex1, margins=0)
plotRGB(ex1, margins=0)
plotRGB(ex1, margins=0)
plotRGB(ex1, margins=0)
plotRGB(ex1, margins=0)
plotRGB(ex1, margins=0)
plotRGB(ex1, margins=0)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
rgb
crs(rgb)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
crs(rgb)
source('D:/Bachelorarbeit/Project/Spyder/raste_mapping.R', echo=TRUE)
